using Telegram.Bot.Types.ReplyMarkups;

namespace TelegramBotWithContextV2.Help
{
    internal static class KeyHelp
    {
        #region Наработка обработки долларов. 
        //                    else
        //                    {
        //                        var keyboard = new Telegram.Bot.Types.ReplyMarkups.InlineKeyboardMarkup(new[]
        //                        {
        //                            new[]
        //                            {
        //                                InlineKeyboardButton.WithCallbackData("1 week for $6", "week_usd"),
        //                                InlineKeyboardButton.WithCallbackData("1 month for $12", "month_usd")                         
        //                            },
        //                            new[]
        //                            {
        //                                InlineKeyboardButton.WithCallbackData("1 year for $21.50", "year_usd"),
        //                                InlineKeyboardButton.WithCallbackData("25 pcs. for $0.50", "25_usd")
        //                            },
        //                            new[]
        //                            {
        //                                InlineKeyboardButton.WithCallbackData("50 pcs. for $0.85", "50_usd"),
        //                                InlineKeyboardButton.WithCallbackData("200 pcs. for $2.45", "200_usd")
        //                            }
        //                        });
        //                        await _botClient.SendTextMessageAsync(message.ChatId, @"🎉Choose the right subscription for a week, a month or a whole year and enjoy unlimited use of ChatGPT and DALL-E during the selected period! It's important to remember that we will add one day to your subscription if the bot fails for any reason for more than two consecutive hours. 

        //🔥There is no limit to the responses generated by ChatGPT and if you need a more detailed response, we can send you multiple messages. You can set any settings for the promt (bot personality) and assign it the role you want. Also, if the context has been reset, the role needs to be set again.

        //🤖Besides, we have the possibility to buy separately requests in ChatGPT: 25, 50 or 200 pcs. In this case the picture generation is limited to a free amount, and all other features remain available. 

        //🌟And don't forget that we also offer to visit our channel https://t.me/commynityChatGPT, where the bot is free. The choice is yours, friends 🤖❤️

        //I hope this makes it easier to read and understand information about our subscriptions and bot features!", replyMarkup: keyboard);
        //                    }
        #endregion
        internal static InlineKeyboardMarkup GetButtonRollesReligionsRu()
        {
            var keyboard = new Telegram.Bot.Types.ReplyMarkups.InlineKeyboardMarkup(new[]
            {
            new[] { InlineKeyboardButton.WithCallbackData("Иисус Христос", "Jesus") },
            new[] { InlineKeyboardButton.WithCallbackData("Пророк Мухаммед (Ислам)", "Muhammad") },
            new[] { InlineKeyboardButton.WithCallbackData("Аллах (Ислам)", "Allah") },
            new[] { InlineKeyboardButton.WithCallbackData("Кришна (Индуизм)", "Krishna") },
            new[] { InlineKeyboardButton.WithCallbackData("Рама (Индуизм)", "Rama") },
            new[] { InlineKeyboardButton.WithCallbackData("Будда (Буддизм)", "Buddha") },
            new[] { InlineKeyboardButton.WithCallbackData("Далай-лама (Буддизм)", "Lama") },
            new[] { InlineKeyboardButton.WithCallbackData("Авраам (Иудаизм)", "Avram") },
            new[] { InlineKeyboardButton.WithCallbackData("Моисей (Иудаизм)", "Moses") },
            new[] { InlineKeyboardButton.WithCallbackData("Гуру Нанак (Сикхизм)", "Guru") },
            new[] { InlineKeyboardButton.WithCallbackData("Лао-цзы (Таоизм)", "Lao") },
            new[] { InlineKeyboardButton.WithCallbackData("Конфуций (Конфуцианство)", "Confucius") },
            new[] { InlineKeyboardButton.WithCallbackData("Назад", "cancel") }
            });
            return keyboard;
        }

        internal static InlineKeyboardMarkup GetButtonRollesReligionsEN()
        {
            var keyboard = new Telegram.Bot.Types.ReplyMarkups.InlineKeyboardMarkup(new[]
            {
            new[] { InlineKeyboardButton.WithCallbackData("Jesus Christ", "Jesus") },
            new[] { InlineKeyboardButton.WithCallbackData("The Prophet Muhammad (Islam)", "Muhammad") },
            new[] { InlineKeyboardButton.WithCallbackData("Allah (Islam)", "Allah") },
            new[] { InlineKeyboardButton.WithCallbackData("Krishna (Hinduism)", "Krishna") },
            new[] { InlineKeyboardButton.WithCallbackData("Rama (Hinduism)", "Rama") },
            new[] { InlineKeyboardButton.WithCallbackData("The Buddha (Buddhism)", "Buddha") },
            new[] { InlineKeyboardButton.WithCallbackData("The Dalai Lama (Buddhism)", "Lama") },
            new[] { InlineKeyboardButton.WithCallbackData("Abraham (Judaism)", "Avram") },
            new[] { InlineKeyboardButton.WithCallbackData("Moses (Judaism)", "Moses") },
            new[] { InlineKeyboardButton.WithCallbackData("Guru Nanak (Sikhism)", "Guru") },
            new[] { InlineKeyboardButton.WithCallbackData("Lao-Tzu (Taoism)", "Lao") },
            new[] { InlineKeyboardButton.WithCallbackData("Confucius (Confucianism)", "Confucius") },
            new[] { InlineKeyboardButton.WithCallbackData("Back", "cancel") }
            });
            return keyboard;
        }
        #region Наработки кнопок ролей на будущее
        internal static InlineKeyboardMarkup GetButtonRollesProfRu()
        {
            var keyboard = new Telegram.Bot.Types.ReplyMarkups.InlineKeyboardMarkup(new[]
            {
            new[] { InlineKeyboardButton.WithCallbackData("", "") },
            new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") }
            });
            return keyboard;
        }

        internal static InlineKeyboardMarkup GetButtonRollesProfEN()
        {
            var keyboard = new Telegram.Bot.Types.ReplyMarkups.InlineKeyboardMarkup(new[]
            {
            new[] { InlineKeyboardButton.WithCallbackData("", "") },
            new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") }
            });
            return keyboard;
        }

        internal static InlineKeyboardMarkup GetButtonRollesRu()
        {
            var keyboard = new Telegram.Bot.Types.ReplyMarkups.InlineKeyboardMarkup(new[]
            {
            new[] { InlineKeyboardButton.WithCallbackData("Религия", "religions") },
            new[] { InlineKeyboardButton.WithCallbackData("Профессии", "professions") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "business") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "pro_coder") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "teachers") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "personal_life") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "medicine") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "fun_roles") }
            });
            return keyboard;
        }

        internal static InlineKeyboardMarkup GetButtonRollesEN()
        {
            var keyboard = new Telegram.Bot.Types.ReplyMarkups.InlineKeyboardMarkup(new[]
            {
            new[] { InlineKeyboardButton.WithCallbackData("Religions", "religions") },
            new[] { InlineKeyboardButton.WithCallbackData("Professions", "professions") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") },
            //new[] { InlineKeyboardButton.WithCallbackData("", "") }
            });
            return keyboard;
        }
        #endregion
    }
}
